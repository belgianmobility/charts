nodeEnv: production
name: stoomlink-ingestion
deployment:
  name: stoomlink-ingestion
service:
  port: 80

connectors:
  gtfs-nmbs:
    moduleName: gtfs-nmbs
    env:
      NMBS_STATIC_GTFS_ACCESS_KEY: c21ac6758dd25af84cca5b707f3cb3de
  gtfs-delijn:
    moduleName: gtfs-delijn
  gtfs-mivb:
    moduleName: gtfs-mivb
  gtfs-tec:
    moduleName: gtfs-tec

assetsDownloader:
  assets-downloader:
    stuff: true
    env:
        ASSETS_SERVER_HOST: 'assets-server'
        ASSETS_SERVER_PROTOCOL: 'http://'
        ASSETS_SERVER_PORT: 80

assetsServer:
  assets-server:
    stuff: true

producers:
  producer:
    stuff: true

producersext:
  producer-ext:
    stuff: true

publishers:
  publisher:
    stuff: true

publishersext:
  publisher-ext:
    stuff: true


image:
  tag: 0.14.12-rc.43
  name: stoomlink-devcontainer-base-backend
  owner: nextmoov


resources:
  requests:
    memory: "128Mi"
    cpu: ".5"
  limits:
    memory: "200Mi"
    cpu: ".5"

ingress:
  enabled: true
  host: stoomlink.io
  subdomain: ingestion


secrets:
  dockerRegistry: registry-docker-io-nextmoov

env:
  nodeEnv: "production"
  stoomlinkEnv: "playground"
  # pgConnectionString: "postgis://gis:gis@storage-postgis-{{ $.Values.env.stoomlinkEnv }}:5432"
  pgConnectionString: "postgis://gis:gis@storage-postgis"
  # kafkaUrl: "ingestion-storage-staging-cp-kafka:9092"
  kafkaUrl: "ingestion-storage-cp-kafka:9092"
  sentryDsn: "https://00000000000000000000000000000000@x000000.ingest.sentry.io/0000000"
